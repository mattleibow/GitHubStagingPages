name: Build and Deploy Main Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'
  # Allow manual triggering
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: './docs'
          
      - name: Install dependencies
        run: |
          cd docs
          gem install bundler
          bundle install
        
      - name: Build with Jekyll
        run: |
          cd docs
          bundle exec jekyll build --baseurl "/GitHubStagingPages"
        env:
          JEKYLL_ENV: production
          
      - name: Deploy to gh-pages
        run: |
          # Copy built site to temporary directory before switching branches
          cp -r docs/_site /tmp/jekyll-site
          
          # Copy the deploy-from-gh-pages workflow to temporary directory
          mkdir -p /tmp/jekyll-site/.github/workflows
          cp .github/workflows/deploy-from-gh-pages.yml /tmp/jekyll-site/.github/workflows/
          
          # Fetch gh-pages branch to preserve staging content
          git fetch origin gh-pages:gh-pages 2>/dev/null || git checkout --orphan gh-pages
          git checkout gh-pages
          
          # Remove all files except staging directory and .github
          find . -maxdepth 1 -not -name 'staging' -not -name '.github' -not -name '.git' -not -name '.' -not -name '..' -exec rm -rf {} \;
          
          # Copy new main site content from temporary directory
          cp -r /tmp/jekyll-site/* .
          
          # Clean up temporary directory
          rm -rf /tmp/jekyll-site
          
          # Commit and push
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Deploy main documentation from commit ${{ github.sha }}"
            git push origin gh-pages
          else
            echo "No changes to commit"
          fi
